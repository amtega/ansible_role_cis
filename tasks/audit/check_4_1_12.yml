---

- name: Setup fact with check description
  ansible.builtin.set_fact:
    cis_check_description: >-
      Ensure use of privileged commands is collected

- name: Gather privileged commands rules
  ansible.builtin.shell: >-
    set -o pipefail ;
    find {{ partition }}
    -xdev \( -perm -4000 -o -perm -2000 \)
    -type f
    | {{ cis_awk_cmd }}
  args:
    warn: no
  changed_when: no
  failed_when: no
  loop: "{{ ansible_facts.mounts | map(attribute='mount') | list }}"
  loop_control:
    loop_var: partition
  register: cis_gather_privileged_commands_rules_result
  vars:
    cis_awk_cmd: >-
      awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000
      -F auid!=4294967295 -k privileged" }'

- name: Gather data from audit.rules and /etc/audit/rules.d/*.rules
  ansible.builtin.shell: cat /etc/audit/audit.rules /etc/audit/rules.d/*.rules
  args:
    warn: no
  changed_when: no
  failed_when: no
  register: cis_gather_data_audit_rules_result

- name: "{{ cis_check_description }}"
  vars:
    desired_output: >-
      {{ cis_gather_privileged_commands_rules_result.results
         | map(attribute="stdout_lines")
         | sum(start=[])
         | list }}
  ansible.builtin.assert:
    quiet: "{{ cis_quiet_assertions }}"
    that:
      - cis_gather_data_audit_rules_result.stdout | length > 0
      - >-
        desired_output
        is subset(cis_gather_data_audit_rules_result.stdout_lines)
  register: cis_check_result
  no_log: "{{ cis_no_log }}"
